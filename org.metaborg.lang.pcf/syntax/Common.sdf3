module Common

lexical syntax

	[a-zA-Z][a-zA-Z0-9]* -> ID
	"-"? [0-9]+          -> INT
	
	"\"" StringChar* "\"" -> STRING
	~[\"\n]               -> StringChar
	"\\\""                -> StringChar
	BackSlashChar         -> StringChar
	"\\"                  -> BackSlashChar
	
	[\ \t\n\r] -> LAYOUT
	
	[\*]                             -> CommentChar
	"/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
	"//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
	
	-> EOF

lexical restrictions

	// Ensure greedy matching for lexicals
	
	CommentChar   -/- [\/]
	INT           -/- [0-9]
	ID            -/- [a-zA-Z0-9\_]
	
	// EOF may not be followed by any char
	
	EOF           -/- ~[]
	
	// Backslash chars in strings may not be followed by " 
	
	BackSlashChar -/- [\"]

context-free restrictions

	// Ensure greedy matching for comments
	
	LAYOUT? -/- [\ \t\n\r]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]

templates // keywords
  
  ID = [fun] {reject}
  ID = [ifz] {reject}
  ID = [then] {reject}
  ID = [else] {reject}
  ID = [fix] {reject}
  ID = [let] {reject}
  ID = [in] {reject} 
  